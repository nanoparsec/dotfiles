## Basics
unbind C-b                               # free the prefix C-b
set -g prefix C-a                        # set it to c-a instead (GNU Screen default)
bind C-a send-prefix                     # Ensure that we can send Ctrl-A to other apps
set -sg escape-time 1                    # Setting the delay between prefix and command
set -g base-index 1                      # Set the base index for windows to 1 instead of 0
set-window-option -g pane-base-index 1   # Set the base index for panes to 1 instead of 0
set -g default-terminal "screen-256color"
set -g status-utf8 on

# Mouse Stuff
set -g mouse-utf8 on
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

## Bindings
# Moving between panes, Vim Style
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Creating and killing panes, Vim Style
unbind-key %
unbind-key '"'
unbind-key x
bind v split-window -h
bind s split-window -v
bind q confirm killp

# Get a quick overview via htop
# Stolen from @railsbros-dirk
bind '~' split-window "htop"

# Dive into the git history with tig
bind '`' split-window "tig"

# Reload the configuration file with `Prefix r`
bind r source-file ~/.tmux.conf \; display "Reloaded!"

## Vim-like Copy Mode
# Stolen from [thoughtbot](http://robots.thoughtbot.com/post/55885045171/tmux-copy-paste-on-os-x-a-better-future)
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

## Color the Message Bar
set -g message-bg colour33
set -g message-fg black
set -g message-command-bg colour33
set -g message-command-fg black

## Pretty status line
# based upon @railsbros-dirk's
set -g status on
set -g status-bg blue
set -g status-fg colour33
set -g status-interval 2
set -g status-justify "left"
set -g status-left-length 50
set -g status-right-length 30

set -g status-left '#[fg=colour33,bg=colour56] #S #[fg=colour56,bg=blue]'
set -g status-right '#[fg=colour56,bg=blue]#[bg=colour56] #[fg=blue,bg=colour56]#[fg=colour33,bg=blue]#[bg=colour33] #[fg=blue,bg=colour33]#[fg=colour33,bg=blue] #h #[fg=colour56,bg=blue]#[fg=colour33,bg=colour56] #(date "+%H:%M")#[fg=colour33] '
