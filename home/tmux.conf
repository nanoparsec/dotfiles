# -- basics -------------------------------------------------------------------
# free the prefix C-b
unbind C-b

# set it to c-a instead (GNU Screen default)
set -g prefix C-a

# Ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

# -- display -------------------------------------------------------------------
# start windows numbering at 1
set -g base-index 1

# make pane numbering consistent with windows
setw -g pane-base-index 1

# rename window to reflect current program
setw -g automatic-rename on

# renumber windows when a window is closed
set -g renumber-windows on

# set terminal title
set -g set-titles on

# slightly longer pane indicators display time
set -g display-panes-time 800

# slightly longer status messages display time
set -g display-time 1000

# Setting the delay between prefix and command
set -sg escape-time 1

# redraw status line every 10 seconds
set -g status-interval 10

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# Mouse Stuff
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# -- shortcuts -------------------------------------------------------------------
## Bindings
# Reload the configuration file with `Prefix r`
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Moving between panes, Vim Style
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Creating and killing panes, Vim Style
unbind-key %
unbind-key '"'
unbind-key x
bind v split-window -h
bind s split-window -v
bind q confirm killp
bind e choose-tree

## Vim-like Copy Mode
# Stolen from [thoughtbot](http://robots.thoughtbot.com/post/55885045171/tmux-copy-paste-on-os-x-a-better-future)
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Prefix Ctrl-C takes what's in the buffer and sends it to system clipboard # via pbcopy
bind C-c run "tmux save-buffer - | pbcopy"
# y in copy mode takes selection and sends it to system clipboard via pbcopy
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# Prefix Ctrl-v fills tmux buffer from system clipboard via pbpaste, then pastes from buffer into tmux window
bind C-v run "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# -- display -------------------------------------------------------------------

# RGB 24-bit colour support, possible values are:
#   - true
#   - false
#   - auto (default)
#
# automatic detection relies on the COLORTERM environment variable being defined
# to 'truecolor' or '24bit' or '$ tput colors' answering '16777216'
# see https://github.com/termstandard/colors
tmux_conf_24b_colour=auto

# -- colours -------------------------------------------------------------------
# Command / message line
set -g message-style fg=white,bold,bg=blue

# set the status line's colors
set -g status-style fg=cyan,bg=colour56

# set the color of the window list
setw -g window-status-style fg=cyan,bg=colour56

# set colors for the active window
set-window-option -g window-status-separator " "
set-window-option -g window-status-current-format '#[fg=green,bg=colour56]#[fg=colour56,bg=red]#[fg=default,bold,bg=red] #I:#W #[fg=red,bg=colour56]#[fg=green,bg=colour56]'

# colors for pane borders
# setw -g pane-border-style fg=green,bg=black
setw -g pane-active-border-style fg=red

# active pane normal, other shaded out
set -g window-style fg=default,bg=default
set -g window-active-style fg=default,bg=default

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# show status bar
set -g status on
set -g status-interval 2

set -g status-justify "left"
set -g status-left-length 80

set -g status-left '#[fg=colour56,bg=cyan] #S #[fg=cyan,bg=colour56] #[fg=red,bg=colour56]'
set -g status-right '#[fg=cyan,bg=colour56]#[bg=cyan] #[fg=colour56,bg=cyan]#[bg=colour56] #[fg=blue,bg=colour56]#[bg=blue] #[fg=cyan,bg=blue]#[fg=colour56,bg=cyan] Ono-Sendai #[fg=colour56,bg=cyan]#[fg=cyan,bg=colour56] %R'



